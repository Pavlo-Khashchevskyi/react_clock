{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","data","Date","toLocaleTimeString","timerId","this","setInterval","setState","console","log","prevProps","name","props","clearInterval","React","Component","App","toggle","clockName","className","type","onClick","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"uMAMaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,aALF,yDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAEjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAZP,gCAeE,SAAmBS,GACbA,EAAUC,OAASN,KAAKO,MAAMD,MAEhCH,QAAQC,IAAR,6CAAkDC,EAAUC,KAA5D,uBAA+EN,KAAKO,MAAMD,SAlBhG,kCAsBE,WACMN,KAAKD,SACPS,cAAcR,KAAKD,WAxBzB,oBA4BE,WACE,OAAOC,KAAKL,MAAMC,SA7BtB,GAA2Ba,IAAMC,Y,OCG3BC,E,4MACJhB,MAAQ,CAENiB,QAAQ,EACRC,UAAW,M,4CAGb,WAA2B,IAAD,OACxB,EAA8Bb,KAAKL,MAA3BiB,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAEhB,OACE,sBAAKC,UAAU,MAAf,UACE,6CACCD,GACC,qDAAsBA,KAEvBD,GACC,8CAEG,IACD,cAAC,EAAD,CAAON,KAAMO,OAIjB,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKd,SAAS,CAAEU,QAAQ,KAFzC,wBAOA,wBACEG,KAAK,SACLC,QAAS,kBAAM,EAAKd,SAAS,CAAEU,QAAQ,KAFzC,wBAMA,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKd,SAAS,CAAEW,UAAWI,KAAKC,MAAsB,GAAhBD,KAAKE,aAH/C,oC,GArCUV,IAAMC,WAkDTC,ICxDfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b837dcca.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  data: string;\n};\n\nexport class Clock extends React.Component<{ name: number | null }, State> {\n  state = {\n    data: new Date().toLocaleTimeString(),\n  };\n\n  timerId?: NodeJS.Timeout;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ data: new Date().toLocaleTimeString() });\n      // eslint-disable-next-line no-console\n      console.log(this.state.data);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: { name: number }) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from oldName ${prevProps.name} to newName ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render(): React.ReactNode {\n    return this.state.data;\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype Toggle = {\n  toggle: boolean;\n  clockName: number | null;\n};\n\nclass App extends React.Component<{}, Toggle> {\n  state = {\n    // eslint-disable-next-line react/no-unused-state\n    toggle: true,\n    clockName: null,\n  };\n\n  render(): React.ReactNode {\n    const { toggle, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {clockName && (\n          <h2>{`Clock's name: ${clockName}`}</h2>\n        )}\n        {toggle && (\n          <p>\n            Current time:\n            {' '}\n            <Clock name={clockName} />\n          </p>\n        )}\n\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ toggle: true })}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ toggle: false })}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({ clockName: Math.floor(Math.random() * 30) });\n          }}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}